package com.shoppin.ecommerce.model;

import java.time.LocalDateTime;

import org.springframework.data.annotation.CreatedBy;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedBy;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;
import org.springframework.stereotype.Component;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnore;

import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Component
@Entity
@Data
@AllArgsConstructor
@NoArgsConstructor
@Table(name = "address")
@EntityListeners(AuditingEntityListener.class)
public class AddressModel {
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@JsonIgnore
	private Integer pk;
	
	@NotNull
	private String email;
	
	@NotNull
	private String firstName;
	
	@NotNull
	private String lastName;
	
	@NotNull
	@Size(max=50)
	private String addressLine1;
	
	@NotNull
	@Size(max=50)
	private String addressLine2;
	
	@NotNull
	@Size(max=20)
	private String town;
	
	@NotNull
	@Size(max=30)
	private String building;
	
	@NotNull
	@Size(max=10)
	private String postalCode;
	
	@NotNull
	@Size(max=20)
	private String landMark;
	
	@NotNull
	@Size(max=10)
	private String contactNumber;
	
	@NotNull
	private AddressType addressType;
	
	@ManyToOne
	@JoinColumn(name = "user_id", referencedColumnName = "pk", nullable = false)
	@JsonBackReference
	private CustomerModel user;
	
	@CreatedDate
	@JsonIgnore
	private LocalDateTime createdTime;
	
	@LastModifiedDate
	@JsonIgnore
	private LocalDateTime lastUpdatedTime;
	
	@LastModifiedBy
	@JsonIgnore
	private String lastModifiedBy;

}
